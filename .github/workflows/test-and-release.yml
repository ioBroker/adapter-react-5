# This is a composition of lint and test scripts
# Make sure to update this file along with the others

name: Test and Release

# Run this job on all pushes and pull requests
# as well as tags with a semantic version
on:
    push:
        branches:
            - '*'
        tags:
            # normal versions
            - 'v?[0-9]+.[0-9]+.[0-9]+'
            # pre-releases
            - 'v?[0-9]+.[0-9]+.[0-9]+-**'
    pull_request: {}

# Cancel previous PR/branch runs when a new commit is pushed
concurrency:
    group: ${{ github.ref }}
    cancel-in-progress: true

jobs:
    check-and-lint:
        if: contains(github.event.head_commit.message, '[skip ci]') == false

        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v4

            - name: Use Node.js 18.x
              uses: actions/setup-node@v4
              with:
                  node-version: 18.x

            - name: Install Dependencies
              run: npm i -f

            - name: Test
              run: npm run test

            - name: Build
              run: npm run build

    #      - name: Lint TypeScript code
    #        run: npm run lint

    auto-merge:
        if: |
            always() &&
            github.event_name == 'pull_request'
        needs: [check-and-lint]
        runs-on: ubuntu-latest
        steps:
            - id: automerge
              name: automerge
              uses: 'pascalgn/automerge-action@v0.16.3'
              env:
                  GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
                  MERGE_LABELS: 'automated pr ðŸ”§'
                  MERGE_FILTER_AUTHOR: 'foxriver76'
                  MERGE_FORKS: 'false'
                  MERGE_DELETE_BRANCH: 'false'
                  UPDATE_LABELS: 'automated pr ðŸ”§'
                  MERGE_METHOD: 'squash'
                  MERGE_COMMIT_MESSAGE: 'pull-request-title-and-description'

            - name: Checkout repository
              if: steps.automerge.outputs.mergeResult == 'merged'
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0 # Fetch the history, or this action won't work
                  ref: 'main'

            - name: Use Node.js 18
              if: steps.automerge.outputs.mergeResult == 'merged'
              uses: actions/setup-node@v4
              with:
                  node-version: 18

            - name: Determine version
              if: steps.automerge.outputs.mergeResult == 'merged'
              id: version
              uses: actions/github-script@v7
              with:
                  result-encoding: string
                  script: |
                      return require('./package.json').version;

            - name: Install Dependencies
              if: steps.automerge.outputs.mergeResult == 'merged'
              run: npm install -f

            - name: Create a clean build
              if: steps.automerge.outputs.mergeResult == 'merged'
              run: npm run build

            - name: Extract the commit body
              if: steps.automerge.outputs.mergeResult == 'merged'
              id: extract_release
              # The body may be multiline, therefore we need to escape some characters
              run: |
                  BODY=$(git show -s --format=%b)
                  BODY="${BODY//'%'/'%25'}"
                  BODY="${BODY//$'\n'/'%0A'}"
                  BODY="${BODY//$'\r'/'%0D'}"
                  echo "::set-output name=BODY::$BODY"

            - name: Publish package to npm
              if: steps.automerge.outputs.mergeResult == 'merged'
              working-directory: dist
              run: |
                  npm config set //registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}
                  npm whoami
                  npm publish

            - name: Create Github Release
              if: steps.automerge.outputs.mergeResult == 'merged'
              uses: ncipollo/release-action@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  tag: v${{ steps.version.outputs.result }}
                  name: Release v${{ steps.version.outputs.result }}
                  draft: false
                  prerelease: ${{ contains(steps.version.outputs.result, '-') }}
                  body: ${{ steps.extract_release.outputs.BODY }}
